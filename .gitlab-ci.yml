variables:
  K8S_DEV_API_URL: https://193.149.190.80:6443
  K8S_PROD_API_URL: https://193.149.190.80:6443
  NAMESPACE_DEV: example-1
  NAMESPACE_PROD: example-1


default:
  tags:
    - gitlab

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_PIPELINE_SOURCE == "web"
    
stages:
- build
- test
- deploy
- linter
- template

build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID

test:
  stage: test
  script:
    - docker compose down
    - docker compose up --abort-on-container-exit
    - docker system prune -af

deploy:dev:
  stage: deploy
  image: centosadmin/kubernetes-helm:3.6.3
  resource_group: deploy_dev
  environment:
    name: development
  script:
    - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_DEV_API_URL
    - kubectl config set-credentials app-sa --token=$K8S_DEV_CI_TOKEN
    - kubectl config set-context app-sa --cluster=k8s --user=app-sa --namespace=example-1
    - kubectl config use-context app-sa
    - kubectl get pods


#deploy:dev:
#  stage: deploy
#  image: centosadmin/kubernetes-helm:3.6.3
#  resource_group: deploy_dev
#  environment:
#    name: development
#  script:
#    - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_DEV_API_URL
#    - kubectl config set-credentials ci --token=$K8S_DEV_CI_TOKEN
#    - kubectl config set-context ci --cluster=k8s --user=ci
#    - kubectl config use-context ci
#    - helm upgrade --install xpaste .helm
#        --set image=$CI_REGISTRY_IMAGE
#        --set imageTag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
#        --debug
#        --atomic
#        --timeout 120s
#        --namespace $NAMESPACE-$CI_ENVIRONMENT_SLUG
#  when: manual

helm_lint:
  stage: linter
  image: centosadmin/kubernetes-helm:3.6.3
  environment:
    name: production
  script:
    - helm lint .helm
        --set image=$CI_REGISTRY_IMAGE
        --set imageTag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  when: manual
  

template:
  stage: template
  image: centosadmin/kubernetes-helm:3.6.3
  environment:
    name: production
  script:
    - helm template $CI_PROJECT_PATH_SLUG .helm
        --set image=$CI_REGISTRY_IMAGE
        --set imageTag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  when: manual

deploy:prod:
  stage: deploy
  image: centosadmin/kubernetes-helm:3.6.3
  resource_group: deploy_prod
  environment:
    name: production
  script:
    - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_PROD_API_URL
    - kubectl config set-credentials ci --token=$K8S_PROD_CI_TOKEN
    - kubectl config set-context ci --cluster=k8s --user=ci
    - kubectl config use-context ci
    - helm upgrade --install xpaste .helm
        -f .helm/values.prod.yaml
        --set image=$CI_REGISTRY_IMAGE
        --set imageTag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
        --debug
        --atomic
        --timeout 120s
        --namespace $NAMESPACE-$CI_ENVIRONMENT_SLUG
  when: manual